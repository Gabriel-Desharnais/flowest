name: Docker

on:
  create


env:
  IMAGE_NAME: flowest

jobs:
  # Push image to GitHub Package Registry.
  # See also https://docs.docker.com/docker-hub/builds/
  push:
    # Ensure test job passes before pushing image.

    runs-on: ubuntu-latest
    if: github.event.ref_type == 'tag'

    steps:
      - uses: actions/checkout@v2

      - name: Get version number from tag
        run: VERSION=${{github.event.ref}}

      - name: Recreate version file
        run: |
          # Create version file
          echo "__version__ = "$VERSION > flower/version.py
          git checkout -b temp
          git add flower/version.py
          git -c user.email="auto@flowest.flowest" -c user.name="flowest-bot" commit -m "Bumb version number to "$VERSION flower/version.py
          echo "dd"$VERSION
          git tag -f $VERSION
          git push -f --tag

      - name: Build image
        run: docker build . --file Dockerfile --tag image

      - name: Log into github registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login docker.pkg.github.com -u ${{ github.actor }} --password-stdin

      - name: Push image on github
        run: |
          IMAGE_ID=docker.pkg.github.com/${{ github.repository }}/$IMAGE_NAME
          IMAGE_ID=${IMAGE_ID,,}
          # Get tag name
          VERSION=${GITHUB_REF/refs\/tags\//}
          # Use Docker `latest` tag convention
          git fetch --all --tags
          if [ $(git tag | sort -V | tail -n1) == $VERSION ]
          then
          docker tag image $IMAGE_ID:latest
          docker push $IMAGE_ID:latest
          fi
          # Do not push other tag then latest since there is 500 MB limit on repos
          #docker tag image $IMAGE_ID:$VERSION
          #docker push $IMAGE_ID:$VERSION
      - name: Log into dockerhub registry
        run: echo "${{ secrets.dockerhubpasword }}" | docker login -u ${{ secrets.dockerhubuser }}  --password-stdin

      - name: Push image on dockerhub
        run: |
          IMAGE_ID=flowest/flowest
          # Get tag name
          VERSION=${GITHUB_REF/refs\/tags\//}
          # Use Docker `latest` tag convention
          if [ $(git tag | sort -V | tail -n1) == $VERSION ]
          then
          docker tag image $IMAGE_ID:latest
          docker push $IMAGE_ID:latest
          fi
          docker tag image $IMAGE_ID:$VERSION
          docker push $IMAGE_ID:$VERSION
